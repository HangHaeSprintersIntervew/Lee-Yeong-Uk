스프링 필터랑 인터셉터의 차이점이 무엇인가요?

필터는 디스페쳐 서블릿 앞단에서 요청과 응답을 걸러 정제하는 역할을 하고
인터셉터는 디스페처 서블릿이 컨트롤러를 호출하기 전, 후에 들어와 핸들러에 관한 요청과 응답에 대해 처리합니다.

------------------------------------------------------------------------

JPA 장점, 단점에 대해 설명해보세요

장점
- SQL문을 직접 작성하지 않고 객체를 사용해 유지보수, 재사용성 측면에서 좋다
- 설정 파일에서 어떤 데이터베이스를 사용하냐에 따라 쉽게 교체가 가능하다.
- 객체 지향적인 설계가 가능해 직관적이고 비즈니스 로직에 집중할 수 있다.
단점
- 복잡한 쿼리같은 경우는 직접 SQL문을 작성하는것이 더 좋다.
- 객체 간 관계를 잘못 맺을 경우 성능 저하가 발생할 수 있으며
   자동으로 생성되는 쿼리가 많아 개발자의 의도대로 만들어지지 않을 수 있다

```<JPA 란 무엇인가?>
자바 ORM 기술에 대한 API 표준이다.
JPA 이전에는 개발자가 SQL매핑 작업을 계속 해야 했었다.
객체를 DB에 넣고 꺼내고 수정하려면 복잡한 SQL문을 작성해야 했고
객체를 객체지향적으로 설계할 수 없었다.

이를 해결하기 위해 ORM이 나왔고, 객체는 객체지형적, DB는 DB대로 설계하며
ORM은 중간에서 둘을 매핑하는 역할을 함.

JPA는 ORM 기술의 표준 명세로, JPA라는 인터페이스를 구현체로는
하이버네이트 등등이 있다.
```
------------------------------------------------------------------------

ORM에 대해 설명해보세요

ORM은 객체와 테이블은 자동으로 매핑해주는 역할을 합니다.

객체와 테이블은 애초에 호환을 염두에 두고 만들어진게 아니여서 불일치가 발생하는데,
ORM을 통해 객체간 관계를 바탕으로 SQL문을 자동으로 생성하여 불일치를 방지합니다.

따라서 ORM을 사용하면 SQL을 따로 작성하지 않아도 객체를 통해 간접적으로 
데이터베이스를 조작할 수 있습니다.
```<ORM의 장단점>
장점
- 재사용, 유지보수, 리팩토링 용이
기존 객체와 독립적으로 작성되어 있다.
- 개발자가 SQL이 아닌 클래스의 메서드를 통해 DB를 조작할 수 있어 
개발자가 객체 모델만 이용해서 프로그래밍하는데 집중할 수 있다.
- DBMS 종속성이 하락한다.
자동으로 SQL문을 생성하기 때문에 RDBMS의 데이터 구조와 객체지향 모델 사이의 간격을
좁힐 수 있다. DBMS를 교체하는 큰 작업도 필요한 시간과 리스크가 감소한다.

단점
- 프로젝트의 복잡성이 증가할수록 신중하게 설계해야한다.
부족한 설계로 잘못 구현될 경우 속도 저하등이 일어날 수 있음.
```
------------------------------------------------------------------------

생성자 주입 사용시 장점이 무엇이라고 생각하시나요?

생성자 주입시 객체의 불변성을 확보하며
테스트 코드의 작성이 용이합니다.
또한 final 키워드를 사용할 수 있으며, 컴파일 시점에 누락된 의존성을 확인할 수 있습니다.

------------------------------------------------------------------------

Entity에 대해 아는대로 설명해보세요

엔티티는 데이터의 집합을 의미합니다.
엔티티는 식별자, 인스턴스 집합, 속성, 관계, 업무 의 특징이 있습니다.
유형, 개념, 사건 엔티티로 분류할 수 있습니다.

------------------------------------------------------------------------

Setter를 무분별하게 사용하면 안되는 이유는 무엇인가요?

setter는 public으로 어떤 곳에서도 접근이 가능해 객체의 일관성을 유지하기 어렵습니다.

final 키워드 등을 사용할 수 있으나, 처음부터 사용하지 않으면 실수가 줄어들어 개발의 생산성이 증가합니다.
