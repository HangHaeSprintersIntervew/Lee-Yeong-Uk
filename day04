스프링에서 AOP가 무엇인가요?

런타임시 동적으로 프록시 객체를 만들어 주는것이 스프링 AOP 입니다.
해당 프록시 객체는 접근 제어 및 부가 기능 추가를 위해 사용됩니다.

```<AOP 용어 정리>
Target - 핵심 기능을 담고 있는 모듈. 타겟은 부가기능을 부여할 대상
Advice - 어드바이스는 타겟에 제공할 부가기능을 담고있는 모듈
Join Point - 어드바이스가 적용될 수 있는 위치
                 - 타겟 객체가 구현한 인터페이스의 모든 메서드는 조인 포인트가 됨
pointcut - 어드바이스를 적용할 타겟의 메서드를 선별하는 정규표현식
aspect - AOP의 기본 모듈, 어드바이스 + 포인트컷 = 애스팩트
            - 애스팩트는 싱글톤 형태의 객체로 존재함
advisor - 어드바이스 + 포인트컷
weaving - 포인트컷에 의해서 결정된 타켓의 조인 포인트에 부가기능을 삽입하는 과정
```
```<스프링 AOP 특징>
1. 스프링은 프록시 기반 AOP 지원
2. 프록시는 호출을 가로챔
→ 프록시는 타켓 객체에 대한 호출을 가로챈 다음 어드바이스의 부가기능 로직을 수행하고
타켓의 핵심기능 로직 호출
혹은 타겟의 핵심기능 로직 메서드를 호출한 후 부가기능을 수행하는 경우도 있음.
```
```<스프링 AOP 구현 방법>
@Aspect 어노테이션을 사용해 구현.
```

----------------------------------------------------------------------------

스프링에서 OOP가 무엇인가요?

스프링은 좋은 객체 지향 프로그래밍을 도와주는 프레임워크 입니다.

다형성을 유지하면서 객체지향 5원칙중 OCP, DIP를 유지하는것은 힘들지만,

스프링 컨테이너를 사용하여 Bean 주입을 하게 된다면
구현체에 의존하지 않고 인터페이스에 의존하며 제어 또한 스프링에서 하기 때문에 
객체지향 설계 원칙을 준수할 수 있습니다.

----------------------------------------------------------------------------

스프링 DI에 대해 아는대로 말씀해주세요

DI는 객체를 직접 생성하는게 아닌, 외부에서 생성한 후 주입시켜주는 방식입니다.

객체를 생성과 제어를 스프링에게 위임하여 스프링이 만들어놓은 의존성 객체를 주입하며
그 다음 의존성 객체의 메소드를 호출하는 방법으로 사용합니다.

이 방법을 통해 모듈간의 결합도가 낮아지고 유연성이 높아집니다.

```<DI 장점>
- 클래스를 재사용할 가능성을 높이고, 다른 클래스와 독립적으로 클래스 테스트 가능
- 비즈니스 로직의 특정 구현이 아닌 클래스를 생성 하는데 매유 효과적
```
```<DI 3가지 방법 설명>
필드주입은 단일책임 위배
setter(수정자) NullPointerException 이 일어날 수 있음.
```
----------------------------------------------------------------------------

IOC가 무엇인가요?

IoC는 제어의 역전입니다.,
객체의 의존성을 역전시켜 객체간의 결합도를 줄이고 유연한 코드를 작성하며
가독성 및 코드 중복, 유지 보수를 편하게 해줍니다.
```<의존성 역전>
상위 계층이 하위 계층에 의존하는 관계를 역전시켜 상위 계층이 하위 계층의 
구현으로부터 독립되게 하는 것입니다.
```
```<결합도 응집도 설명>
결합도 - 서로 다른 모듈간 상호 의존하는 정도. 결합도가 높은 클래스가 변경되면
               연관된 클래스도 변경해야 하며 다른 코드에서 클래스를 재사용하기 어렵다.
응집도 - 한 모듈 내부의 처리 요소들이 서로 관련되어 있는 정도. 모듈이 독립적인 기능을
               수행하거나 혹은 하나의 기능을 중심으로 요소들이 모여있는 것.
```
```<모듈>
보통 클래스를 의미
```
```<스프링 DI, IoC 설명>
DI는 객체를 직접 생성하는게 아닌, 외부에서 생성한 후 주입시켜주는 방식입니다.

IoC는 제어의 역전이며 객체를 생성한 후, 해당 객체의 제어권을 
스프링에게 위임하여 스프링이 만들어놓은 의존성 객체를 주입하며
그 다음 의존성 객체의 메소드를 호출하는 방법으로 사용합니다.

스프링이 모든 의존성 객체를 만들고 주입함으로써 이 Bean 들은 싱글톤 패턴을 가지며 
제어의 흐름을 사용자가 아닌 스프링에 맡겨 처리합니다.
```
----------------------------------------------------------------------------

XSS에 대해 설명해주세요

XSS는 게시판이나 웹 메일들에 JS와 같은 스크립트 코드를 삽입해 개발자가 고려하지 않은
기능이 작동하게 하는 공격입니다.

----------------------------------------------------------------------------

XSS를 막기 위해서는 어떤 방법이 있는지?

사용자의 모든 입력값에 대해 필터링을 하는 방법이 있습니다.
주로 스크립트를 실행하기 위한 특수문자들을 필터링해 방지할 수 있습니다.
