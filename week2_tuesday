1. Spring Security란?

스프링 시큐리티는 스프링 기반 애플리케이션의 보안을 담당하는 스프링 프레임워크 입니다.

```<인증과 인가>
인증 - 해당 사용자가 본인이 맞는지 확인하는 절차
인가 - 인증된 사용자가 요청된 자원에 접근 가능한지를 결정하는 절차
```
```<동작 과정>
1. http Request(사용자 요청)
2. AuthenticationFilter가 요청을 가로채서 인증용 객체 생성
3. 실제 데이터베이스에서 객체를 통해 사용자 정보(UserDetails) 가져옴
4. AuthenticationProvider에서 UserDetails를 받고 사용자 정보를 비교
5. 인증이 완료되면 권한등의 사용자 정보를 받은 Authentication 객체 반환
6. 해당 객체를 SecurityContext에 저장
```

2. 브라우저에서 서버 응답까지의 흐름을 아는대로 설명하세요

1.브라우저에서 어떤 프로토콜, URL, 포트로 요청할 것인지 분석
```<예외>
선언되지 않았다면 http 는 80, https 는 443의 디폴트 값으로 요청
```
2.HSTS 목록 조회
3.URL을 IP 주소로 전환, 브라우저 캐시에 해당 URL이 존재하지 않으면 DNS 서버에 요청.
4.라우터를 통해 해당 서버의 게이트웨이까지 이동
5.ARP를 통해 IP주소를 MAC로 변환
```<변환 이유>
논리 주소인 IP를 물리 주소인 MAC으로 변환해야 함
```
6.대상 서버와 TCP 소켓 연결
7.HTTP(HTTPS) 프로토콜로 요청, 응답
8.브라우저에서 응답을 해석

3. 객체지향 관점에서 스프링 프레임워크를 바라봤을 때 장단점이 무엇이라고 생각하시나요

스프링은 의존성 주입과 DI 컨테이너를 제공함으로써
다형성 + OCP, DIP를 가능하게 지원해 클라이언트 코드의 변경 없이
기능 확장이 가능합니다.|

4. jwt에 대해서 간략히 설명해주세요

JWT는 JSON 포맷을 이용하여 사용자에 대한 속성을 저장하는 Claim 기반의 웹 토큰입니다.

```<Cliam>
토큰에서 사용할 정보
```
```<JWT 구조>
JWT는 헤더, 페이로드, 시그니쳐 3 부분으로 이루어지며 각 부분은 Base64Url로 인코딩 됩니다.
토큰의 헤더는 시그니쳐를 해싱하기 위한 알고리즘이 지정되어있고

페이로드는 토큰에서 사용할 정보가 담겨있습니다.

시그니쳐는 토큰을 인코딩 혹은 유효성 검증을 할 때 사용하는 고유한 암호화 코드입니다.
```
```<장단점>
세션과는 달리 토큰은 클라이언트에 저장되기 때문에 서버의 자원을 사용하지 않아 효율적이며 
규격이 정해져 있기 때문에 다양한 클라이언트에서 호환성이 뛰어납니다.

하지만 JWT토큰 자체가 가지는 정보, Payload 가 많아질수록 점점 부담이 켜지며

세션과는 달리 한번 발급되면 서버측에서 관리하지 못한다는 단점이 있습니다.
```

5. OAuth에 대해서 간략히 설명해주세요

Oauth는 인터넷에서 다른 웹 서비스에 등록된 정보에 대한 접근 권한을 부여할 수 있는 산업 표준 프로토콜입니다.

```<OAuth 동작 구성 요소>
사용자 Resource Owner,
클라이언트 (Web/App)
제공자 Resource Server
```
```<동작 과정>
1. 클라이언트가 서비스 제공자에게 '요청 토큰'을 요청
2. 서비스 제공자가 클라이언트에게 '요청 토큰' 발급
3. 클라이언트가 사용자를 서비스 제공자에게 이동시키고, 이 과정에서 사용자 인증 수행(인증, Authentication)
4. 사용자 인증 후, 서비스 제공자가 사용자를 클라이언트로 이동
5. 클라이언트가 '접근 토큰' 요청
6. 서비스 제공자가 '접근 토큰' 발급(권한 부여, Authorization)
7. 클라이언트는 '접근 토큰'을 사용하여 사용자 정보에 접근 가능
```

6. 오버라이딩과 오버로딩이  무엇이고 어떤 차이가 있는지 설명하세요

오버로딩은 매개변수의 유형과 개수를 다르게 하여 다양한 호출에 응답할 수 있으며

오버라이딩은 상위 클래스에서 가지고 있는 메서드가 하위 클래스에 상속되어 
그대로 사용하거나 해당 메서드를 재정의해서 사용하는 것입니다.
