제네릭이 무엇인가요?

제네릭은 클래스, 인터페이스, 메소드를 정의할 때 타입(type)을 파라미터로 사용할 수 있도록 합니다.

-------------------------------------------------------------------------------------------

어노테이션에 대해 설명하세요

어노테이션은 프로그램 내에서 주석과 유사하게 비즈니스 로직에는 영향을 미치지 않으면서 소스코드의 구조를 바꾸는 등 유의미한 정보를 제공합니다.

```<장점>
어노테이션 등장 이전에는 프로그램 소스코드와 프로그램 설정파일을 따로 작성했어서 프로젝트를 여러명이서 할 경우
사용 / 수정에 어려움이 있었으나, 어노테이션 사용 이후 이와같은 문제를 해결할 수 있었습니다.
```
-------------------------------------------------------------------------------------------

컬렉션 클래스에서 제네릭을 사용하는 이유를 설명해보세요

제네릭을 이용하면 잘못된 타입이 사용될 수 있는 문제를 컴파일 과정에서 제거할 수 있습니다.
또한 타입을 제한하기 때문에 추가적인 타입 변환이 필요 없어 프로그램 성능이 향상되는 효과가 있습니다.

-------------------------------------------------------------------------------------------

데드락이 무엇이고, 해결방안에 대해 설명해보세요

데드락은 프로세스가 자원을 얻지 못해서 다음 처리를 하지 못하는 상태이며,
교착 상태 라고도 부릅니다.

이를 해결하려면 프로세스가 자원을 요구할 때, 할당한 후에도 안정적인 상태인지 사전에
확인하여 안정 상태일경우에는 자원을 할당하고, 
아니면 다른 프로세스에서 자원 해지까지 기다립니다.

```<예방 회피 탐지 회복 키워드로 답변 수정하기>```

-------------------------------------------------------------------------------------------

JVM이 하는 역할이 무엇인가요

JVM은 Java Byte Code 를 운영체제에 맞게 해석해주는 역할을 합니다.
또한 가비지 컬렉터를 통해 메모리 관리도 담당하고 있습니다.

```<중요성>
• 동일한 기능을 하는 프로그램이더라도 메모리 관리에 따라 성능이 좌우될 수 있습니다.
• 메모리가 관리 되지 않을 경우 속도 저하나 프로그램의 중단 및 시스템의 부하 및 장애 등으로 발생할 가능성이 있습니다. → 당연히 서비스에도 장애가 발생할 수밖에 없습니다.
• 한정된 메모리를 효율적으로 사용하여 최고의 성능을 끌어낼 수 있습니다.
```
```<가비지 컬렉터 내용 공부하기>```
-------------------------------------------------------------------------------------------

스프링에서 싱글톤 패턴에 대해 설명해보세요

싱글톤 패턴은 처음 생성자로 객체를 생성한 뒤, 그 다음 생성자부터는 객체 생성이 아닌
처음에 생성한 객체를 리턴하는 것입니다.

스프링에선 스프링 컨테이너를 통해 싱글톤 패턴을 적용하지 않고도 객체 인스턴스를 싱글톤으로 관리합니다.

이러한 기능 덕분에 유연성이 떨어지게되는 싱글톤 패턴의 문제를 해결함과 동시에
객체를 싱글톤으로 유지할 수 있습니다.

```<싱글톤 패턴의 단점>
1. 싱글톤 패턴을 구현하는 코드 자체가 많다
2. 의존관계상 클라이언트가 구체 클래스에 의존한다.
3. 테스트하기 어렵다.
4. 내부 속성을 변경하거나 초기화하기 어렵다.
5. private 생성자로 자식 클래스를 만들기 어렵다.
6. 싱글톤 컨테이너
```
```<스프링 컨테이너>
스프링 컨테이너는 자바 객체의 생명 주기를 관리하며, 생성된 자바 객체들에게 추가적인 기능을 제공하는 역할을 합니다.

개발자는 new 연산자, 인터페이스 호출, 팩토리 호출 방식으로 객체를 생성하고 소멸시킬 수 있는데, 스프링 컨테이너가 이 역할을 대신해 줍니다.
```
